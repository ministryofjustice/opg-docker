access_log  /var/log/app/nginx.access.json logstash_json;
error_log   /var/log/app/nginx.error.log error;

{{ if exists "/opg/nginx/ssl/force/redirect" }}
server {
   listen      80;
   return      307 https://$host$request_uri;
}
{{ end }}


{{ range lsdir "/opg/nginx/router" }}
{{ with $vhost_id := . }}
server {
{{ if not (exists "/opg/nginx/ssl/force/redirect") }}
    listen     80;
{{ end }}
    listen     443 ssl;
    server_name {{ getv (printf "/opg/nginx/router/%s/vhost" $vhost_id) }};

    {{ with $client_max_body_size_key := (printf "/opg/nginx/router/%s/client/max/body/size" $vhost_id) }}
    {{ if exists $client_max_body_size_key }}
    client_max_body_size {{ getv $client_max_body_size_key }};
    {{ end }}
    {{ end }}

    proxy_buffering off;

    location / {
        # Force DNS/name resolution by setting target as a parameter
        set $target "{{ getv (printf "/opg/nginx/router/%s/target" $vhost_id) }}";
        proxy_pass $target;
        proxy_set_header Host              $host;
        proxy_set_header X-Forwarded-For   $remote_addr;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    set $uid $http_x_request_id;
    if ($uid = '') {
      set $uid $request_id;
    }
    add_header X-Request-Id $uid;
    proxy_set_header X-Request-Id $uid;
}
{{ end }}
{{ end }}
