#!/bin/bash
#
# Enable/disable the xhprof php profiler (installed as part of the Docker container build)
#
usage() {
  echo "profiler --enable   (enable profiling)"
  echo "         --disable  (disable profiling)"
  echo "         --help     (display this usage)"
}

enable() {
  echo "Enabling the profiler"
  php5enmod xhprof
  /bin/sed -i -e 's/return.*42;/return true;/g'  -e "s/'db.host.*27017',/'db.host' => 'mongodb:\/\/profiler:27017',/g" /app/vendor/perftools/xhgui/config/config.default.php
  /bin/sed -i -e 's/.*# fastcgi_param.*PHP_VALUE.*auto_prepend_file=\/app\/vendor\/perftools\/xhgui\/external\/header.php.*/        fastcgi_param   PHP_VALUE          "auto_prepend_file=\/app\/vendor\/perftools\/xhgui\/external\/header.php";/g' /etc/nginx/conf.d/app.conf
  restart nginx
  restart php
  return
}

disable() {
  echo "Disabling the profiler"
  php5dismod xhprof
  /bin/sed -i -e 's/.*fastcgi_param.*PHP_VALUE.*auto_prepend_file=\/app\/vendor\/perftools\/xhgui\/external\/header.php.*/        # fastcgi_param   PHP_VALUE          "auto_prepend_file=\/app\/vendor\/perftools\/xhgui\/external\/header.php";/g' /etc/nginx/conf.d/app.conf
  restart nginx
  restart php
  return
}

restart() {
  service=$(echo "${1}" | tr -d ' ')
  if [ ${service} = "" ] ; then
    echo "No service specified"
    exit 100
  fi
  echo "Restarting ${service}"
  /usr/bin/pgrep -l -f ${service} | /usr/bin/awk '! /runsv/ {print $1}' | /usr/bin/xargs -n 1 kill
  return
}

arg=$(echo "${1}" | tr -d ' \t')
case ${arg} in
--enable)
  enable
  ;;
--disable)
  disable
  ;;
--help)
  usage
  exit 0
  ;;
"")
  echo "Missing argument"
  usage
  exit 110
  ;;
*)
  echo "Invalid argument ${arg}"
  usage
  exit 120
  ;;
esac

exit
